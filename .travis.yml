os: linux
dist: trusty
sudo: required
language: generic

env:
    global:
        - PROTOBUF_ROOT=~/protobuf
        - TORCH_ROOT=~/torch
        - OMP_NUM_THREADS=1
        - OPENBLAS_MAIN_FREE=1
        - secure: "WSqrE+PQm76DdoRLRGKTK6fRWfXZjIb0BWCZm3IgHgFO7OE6fcK2tBnpDNNw4XQjmo27FFWlEhxN32g18P84n5PvErHaH65IuS9Nv6FkLlPXZlVqGNxbPmEA4oTkD/6Y6kZyZWZtLh2+/1ijuzQAPnIy/4BEuL8pdO+PsoJ9hYM="
    matrix:
        - DIGITS_TEST_FRAMEWORK=torch WITH_PLUGINS=false
        - DIGITS_TEST_FRAMEWORK=none WITH_PLUGINS=false
        - DIGITS_TEST_FRAMEWORK=none WITH_PLUGINS=true


matrix:
    include:
        - env: LINT_CHECK
          addons:
              apt:
                  packages:
                      - closure-linter
                      - python-flake8
          install: true
          script:
              - ./digits-lint

cache:
    apt: true
    directories:
        - $PROTOBUF_ROOT
        - $TORCH_ROOT

addons:
    apt:
        packages:
            - build-essential
            - cmake
            - cython
            - git
            - gfortran
            - graphviz
            - libboost-filesystem-dev
            - libboost-python-dev
            - libboost-system-dev
            - libboost-thread-dev
            - libgflags-dev
            - libgoogle-glog-dev
            - libhdf5-serial-dev
            - libleveldb-dev
            - liblmdb-dev
            - libopenblas-dev
            - libopencv-dev
            - libsnappy-dev


install:
    - wget http://repo.continuum.io/miniconda/Miniconda3-3.7.3-Linux-x86_64.sh -O miniconda.sh;
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$PATH:$HOME/miniconda/bin"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    - conda create --yes -q -n test python=3.6 pip pytest
    - conda env update -n test -f binder/environment.yml -q
    - source activate test
    - mkdir -p ~/.config/matplotlib
    - echo "backend:agg" > ~/.config/matplotlib/matplotlibrc
    - ./scripts/travis/install-protobuf.sh $PROTOBUF_ROOT
    - if [ "$DIGITS_TEST_FRAMEWORK" == "torch" ]; then travis_wait ./scripts/travis/install-torch.sh $TORCH_ROOT; else unset TORCH_ROOT; fi
    - pip install -r ./requirements.txt
    - pip install -r ./requirements_test.txt
    - pip install -e .
    - if [ "$WITH_PLUGINS" != "false" ]; then find ./plugins/*/* -maxdepth 0 -type d | xargs -n1 pip install -e; fi

script:
    - ./digits-test -v
